"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª—é–¥
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from utils.callback_data import NavigationCallback, ItemCallback
from utils.data_manager import data_manager
from keyboards.navigation_keyboards import back_to_main_keyboard
from keyboards.menu_keyboards import item_keyboard
from states.order_states import SearchStates
from config import EMOJI

router = Router()

@router.callback_query(NavigationCallback.filter(F.action == "search"))
async def start_search(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –±–ª—é–¥"""
    await state.set_state(SearchStates.waiting_for_query)

    text = f"""
{EMOJI['search']} <b>–ü–æ–∏—Å–∫ –±–ª—é–¥</b>

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –∏–ª–∏ –µ–≥–æ —á–∞—Å—Ç—å:
"""

    await callback.message.edit_text(
        text,
        reply_markup=back_to_main_keyboard()
    )
    await callback.answer()

@router.message(SearchStates.waiting_for_query)
async def process_search_query(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"""
    query = message.text.strip()

    if len(query) < 2:
        await message.answer("‚ùå –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞")
        return

    results = data_manager.search_items(query)

    if not results:
        text = f"üòî –ü–æ –∑–∞–ø—Ä–æ—Å—É <b>'{query}'</b> –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å:"
        await message.answer(text)
        return

    await state.clear()

    text = f"{EMOJI['search']} <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ '{query}':</b>\n\n"

    for i, item in enumerate(results[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        emoji = item.get("image", "üçΩÔ∏è")
        name = item.get("name", "–ë–ª—é–¥–æ")
        price = item.get("price", 0)
        text += f"{i}. {emoji} {name} - {price}‚ÇΩ\n"

    if len(results) > 10:
        text += f"\n... –∏ –µ—â–µ {len(results) - 10} –±–ª—é–¥"

    keyboard = back_to_main_keyboard()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if results:
        from aiogram.utils.keyboard import InlineKeyboardBuilder
        builder = InlineKeyboardBuilder()

        for item in results[:5]:
            emoji = item.get("image", "üçΩÔ∏è")
            name = item.get("name", "–ë–ª—é–¥–æ")

            builder.button(
                text=f"{emoji} {name}",
                callback_data=ItemCallback(action="view", item_id=item["id"])
            )

        builder.button(
            text=f"{EMOJI['home']} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data=NavigationCallback(action="main")
        )

        builder.adjust(1)
        keyboard = builder.as_markup()

    await message.answer(text, reply_markup=keyboard)
