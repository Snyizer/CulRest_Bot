"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from utils.callback_data import MenuCallback, NavigationCallback
from utils.data_manager import data_manager
from keyboards.navigation_keyboards import main_menu_keyboard
from keyboards.menu_keyboards import (
    cuisines_keyboard, 
    categories_keyboard, 
    all_categories_keyboard,
    items_keyboard
)
from config import EMOJI

router = Router()

@router.message(Command("start"))
async def start_command(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()

    user_name = message.from_user.first_name or "–î—Ä—É–≥"

    welcome_text = f"""üî• <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω Simmer!</b> üî•

–ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–º—É –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–º—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é! –í –Ω–∞—à–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –≤–∞—Å –∂–¥—É—Ç:

üçΩÔ∏è –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –º–µ–Ω—é - –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, –∞–∑–∏–∞—Ç—Å–∫–∞—è –∏ —Ä—É—Å—Å–∫–∞—è –∫—É—Ö–Ω–∏
üîç –£–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫ –±–ª—é–¥ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é  
‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞ - —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –ø–æ–∑–∏—Ü–∏–∏
üõí –ü—Ä–æ—Å—Ç–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! üëá"""

    await message.answer(
        welcome_text,
        reply_markup=main_menu_keyboard()
    )

@router.callback_query(NavigationCallback.filter(F.action == "main"))
async def show_main_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()

    welcome_text = f"""
üçΩÔ∏è <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
"""

    await callback.message.edit_text(
        welcome_text,
        reply_markup=main_menu_keyboard()
    )
    await callback.answer()

@router.callback_query(MenuCallback.filter(F.action == "cuisines"))
async def show_cuisines(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ö–æ–Ω—å"""
    text = f"{EMOJI['menu']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é:</b>"

    await callback.message.edit_text(
        text,
        reply_markup=cuisines_keyboard()
    )
    await callback.answer()

@router.callback_query(MenuCallback.filter(F.action == "categories"))
async def show_categories(callback: CallbackQuery, callback_data: MenuCallback):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–∏"""
    cuisine_id = callback_data.cuisine_id
    cuisines = data_manager.get_cuisines()
    cuisine_name = cuisines.get(cuisine_id, {}).get("name", "–ö—É—Ö–Ω—è")

    text = f"üçΩÔ∏è <b>{cuisine_name}</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:"

    await callback.message.edit_text(
        text,
        reply_markup=categories_keyboard(cuisine_id)
    )
    await callback.answer()

@router.callback_query(MenuCallback.filter(F.action == "all_categories"))
async def show_all_categories(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Å–µ—Ö –∫—É—Ö–æ–Ω—å"""
    text = "üåç <b>–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:"

    await callback.message.edit_text(
        text,
        reply_markup=all_categories_keyboard()
    )
    await callback.answer()

@router.callback_query(MenuCallback.filter(F.action == "items"))
async def show_items(callback: CallbackQuery, callback_data: MenuCallback):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    cuisine_id = callback_data.cuisine_id
    category_id = callback_data.category_id
    page = callback_data.page

    cuisines = data_manager.get_cuisines()
    cuisine_name = cuisines.get(cuisine_id, {}).get("name", "–ö—É—Ö–Ω—è")
    categories = data_manager.get_categories(cuisine_id)
    category_name = categories.get(category_id, {}).get("name", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è")

    items = data_manager.get_items(cuisine_id, category_id)

    if not items:
        text = f"üòî –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <b>{category_name}</b> –ø–æ–∫–∞ –Ω–µ—Ç –±–ª—é–¥"
    else:
        text = f"üçΩÔ∏è <b>{cuisine_name} ‚Üí {category_name}</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:"

    await callback.message.edit_text(
        text,
        reply_markup=items_keyboard(cuisine_id, category_id, page)
    )
    await callback.answer()

# –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Å—Ç—ã—Ö callback
@router.callback_query(F.data == "ignore")
async def ignore_callback(callback: CallbackQuery):
    """–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å callback"""
    await callback.answer()
