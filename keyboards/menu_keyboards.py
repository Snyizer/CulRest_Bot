"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
"""

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from utils.callback_data import MenuCallback, ItemCallback, FavoritesCallback, OrderCallback, NavigationCallback
from utils.data_manager import data_manager
from config import EMOJI, MAX_ITEMS_PER_PAGE

def cuisines_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫—É—Ö–Ω–∏"""
    builder = InlineKeyboardBuilder()

    cuisines = data_manager.get_cuisines()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—Å–µ –∫—É—Ö–Ω–∏"
    builder.button(
        text="üåç –í—Å–µ –∫—É—Ö–Ω–∏",
        callback_data=MenuCallback(action="all_categories")
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫—É—Ö–æ–Ω—å
    for cuisine_id, cuisine_data in cuisines.items():
        emoji = cuisine_data.get("emoji", "üçΩÔ∏è")
        name = cuisine_data.get("name", "–ö—É—Ö–Ω—è")

        builder.button(
            text=f"{emoji} {name}",
            callback_data=MenuCallback(action="categories", cuisine_id=cuisine_id)
        )

    builder.button(
        text=f"{EMOJI['home']} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=NavigationCallback(action="main")
    )

    builder.adjust(1)
    return builder.as_markup()

def categories_keyboard(cuisine_id: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –∫—É—Ö–Ω–∏"""
    builder = InlineKeyboardBuilder()

    categories = data_manager.get_categories(cuisine_id)

    for category_id, category_data in categories.items():
        emoji = category_data.get("emoji", "üçΩÔ∏è")
        name = category_data.get("name", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è")

        builder.button(
            text=f"{emoji} {name}",
            callback_data=MenuCallback(action="items", cuisine_id=cuisine_id, category_id=category_id)
        )

    builder.button(
        text=f"{EMOJI['back']} –ù–∞–∑–∞–¥",
        callback_data=MenuCallback(action="cuisines")
    )
    builder.button(
        text=f"{EMOJI['home']} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", 
        callback_data=NavigationCallback(action="main")
    )

    builder.adjust(1)
    return builder.as_markup()

def all_categories_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    builder = InlineKeyboardBuilder()

    cuisines = data_manager.get_cuisines()

    for cuisine_id, cuisine_data in cuisines.items():
        categories = cuisine_data.get("categories", {})

        for category_id, category_data in categories.items():
            emoji = category_data.get("emoji", "üçΩÔ∏è")
            name = category_data.get("name", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è")
            cuisine_name = cuisine_data.get("name", "")

            builder.button(
                text=f"{emoji} {name} ({cuisine_name})",
                callback_data=MenuCallback(action="items", cuisine_id=cuisine_id, category_id=category_id)
            )

    builder.button(
        text=f"{EMOJI['back']} –ù–∞–∑–∞–¥",
        callback_data=MenuCallback(action="cuisines")
    )
    builder.button(
        text=f"{EMOJI['home']} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=NavigationCallback(action="main")
    )

    builder.adjust(1)
    return builder.as_markup()

def items_keyboard(cuisine_id: str, category_id: str, page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–ª—é–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    builder = InlineKeyboardBuilder()

    items = data_manager.get_items(cuisine_id, category_id)

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    start_idx = page * MAX_ITEMS_PER_PAGE
    end_idx = start_idx + MAX_ITEMS_PER_PAGE
    page_items = items[start_idx:end_idx]

    for item in page_items:
        emoji = item.get("image", "üçΩÔ∏è")
        name = item.get("name", "–ë–ª—é–¥–æ")
        price = item.get("price", 0)

        builder.button(
            text=f"{emoji} {name} - {price}‚ÇΩ",
            callback_data=ItemCallback(action="view", item_id=item["id"], page=page)
        )

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    total_pages = (len(items) + MAX_ITEMS_PER_PAGE - 1) // MAX_ITEMS_PER_PAGE
    if total_pages > 1:
        pagination_row = []

        if page > 0:
            pagination_row.append(builder.button(
                text="‚óÄÔ∏è",
                callback_data=MenuCallback(
                    action="items", 
                    cuisine_id=cuisine_id, 
                    category_id=category_id,
                    page=page - 1
                )
            ))

        pagination_row.append(builder.button(
            text=f"{page + 1}/{total_pages}",
            callback_data="ignore"
        ))

        if page < total_pages - 1:
            pagination_row.append(builder.button(
                text="‚ñ∂Ô∏è",
                callback_data=MenuCallback(
                    action="items",
                    cuisine_id=cuisine_id,
                    category_id=category_id, 
                    page=page + 1
                )
            ))

    builder.button(
        text=f"{EMOJI['back']} –ù–∞–∑–∞–¥",
        callback_data=MenuCallback(action="categories", cuisine_id=cuisine_id)
    )
    builder.button(
        text=f"{EMOJI['home']} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=NavigationCallback(action="main")
    )

    builder.adjust(1)
    return builder.as_markup()

def item_keyboard(item_id: str, user_id: int, page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –±–ª—é–¥–∞"""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–∞–∑
    builder.button(
        text=f"{EMOJI['add']} –î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑",
        callback_data=OrderCallback(action="add", item_id=item_id)
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    is_favorite = data_manager.is_in_favorites(user_id, item_id)
    if is_favorite:
        builder.button(
            text=f"{EMOJI['remove']} –£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ",
            callback_data=FavoritesCallback(action="remove", item_id=item_id, page=page)
        )
    else:
        builder.button(
            text=f"{EMOJI['favorites']} –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
            callback_data=FavoritesCallback(action="add", item_id=item_id, page=page)
        )

    builder.button(
        text=f"{EMOJI['back']} –ù–∞–∑–∞–¥",
        callback_data=ItemCallback(action="back", item_id=item_id, page=page)
    )
    builder.button(
        text=f"{EMOJI['home']} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=NavigationCallback(action="main")
    )

    builder.adjust(2, 2)
    return builder.as_markup()
